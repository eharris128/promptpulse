# Docker Compose for PromptPulse Development Environment
# Optional alternative to running services locally

version: '3.8'

services:
  # Environmental Service
  environmental-service:
    build:
      context: ./environmental-service
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - FLASK_DEBUG=true
      - LOG_LEVEL=DEBUG
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./environmental-service/src:/app/src:ro
      - ./environmental-service/.env:/app/.env:ro
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - promptpulse-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - promptpulse-network

  # Node.js API Server
  api-server:
    build:
      context: .
      dockerfile: Dockerfile.api
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - ENVIRONMENTAL_SERVICE_URL=http://environmental-service:5000
      - DATABASE_URL=${DATABASE_URL}
      - LOG_LEVEL=debug
    volumes:
      - .:/app:ro
      - /app/node_modules
      - ./.env:/app/.env:ro
    depends_on:
      - environmental-service
    networks:
      - promptpulse-network

  # Next.js Client
  client:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    ports:
      - "3001:3001"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:3000
      - NODE_ENV=development
    volumes:
      - ./client:/app:ro
      - /app/node_modules
      - /app/.next
    depends_on:
      - api-server
    networks:
      - promptpulse-network

volumes:
  redis-data:

networks:
  promptpulse-network:
    driver: bridge